# frozen_string_literal: true

require('starkcore')
require_relative('../utils/rest')

module StarkBank
  # # CorporateBalance object
  #
  # The CorporateBalance object displays the current corporate balance of the Workspace, which is the result of the sum of
  # all transactions within this Workspace. The balance is never generated by the user, but it can be retrieved to see
  # the available information.
  #
  # ## Attributes (return-only):
  # - id [string]: unique id returned when CorporateBalance is created. ex: '5656565656565656'
  # - amount [integer]: current corporate balance amount of the Workspace in cents. ex: 200 (= R$ 2.00)
  # - limit [integer]: the maximum negative balance allowed by the user. ex: 10000 (= R$ 100.00)
  # - max_limit [integer]: the maximum negative balance allowed by StarkBank. ex: 100000 (= R$ 1000.00)
  # - currency [string]: currency of the current Workspace. Expect others to be added eventually. ex: 'BRL'
  # - updated [DateTime]: latest update datetime for the CorporateBalance. ex: DateTime.new(2020, 3, 10, 10, 30, 0, 0)
  class CorporateBalance < StarkCore::Utils::Resource
    attr_reader :amount, :limit, :max_limit, :currency, :updated, :id
    def initialize(amount: nil, limit: nil, max_limit: nil, currency: nil, updated: nil, id: nil)
      super(id)
      @amount = amount
      @limit = limit
      @max_limit = max_limit
      @currency = currency
      @updated = StarkCore::Utils::Checks.check_datetime(updated)
    end

    # # Retrieve the CorporateBalance object
    #
    # Receive the CorporateBalance object linked to your Workspace in the Stark Infrq API
    #
    # ## Parameters (optional):
    # - user [Organization/Project object, default nil]: Organization or Project object. Not necessary if StarkBank.user was set before function call
    #
    # ## Return:
    # - CorporateBalance object with updated attributes
    def self.get(user: nil)
      StarkBank::Utils::Rest.get_stream(user: user, **resource).next
    end

    def self.resource
      {
        resource_name: 'CorporateBalance',
        resource_maker: proc { |json|
          CorporateBalance.new(
            id: json['id'],
            amount: json['amount'],
            limit: json['limit'],
            max_limit: json['max_limit'],
            currency: json['currency'],
            updated: json['updated']
          )
        }
      }
    end
  end
end
