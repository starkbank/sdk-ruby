# frozen_string_literal: true

require_relative('../utils/resource')
require_relative('../utils/rest')
require_relative('../utils/checks')
require_relative('boleto')

module StarkBank
  # # BoletoLog object
  #
  # Every time a Boleto entity is updated, a corresponding BoletoLog
  # is generated for the entity. This log is never generated by the
  # user, but it can be retrieved to check additional information
  # on the Boleto.
  #
  # ## Attributes:
  # - id [string]: unique id returned when the log is created. ex: "5656565656565656"
  # - boleto [Boleto]: Boleto entity to which the log refers to.
  # - errors [list of strings]: list of errors linked to this Boleto event
  # - type [string]: type of the Boleto event which triggered the log creation. ex: "registered" or "paid"
  # - created [datetime.datetime]: creation datetime for the boleto. ex: datetime.datetime(2020, 3, 10, 10, 30, 0, 0)
  class BoletoLog < StarkBank::Utils::Resource
    attr_reader :id, :created, :type, :errors, :boleto
    def initialize(id:, created:, type:, errors:, boleto:)
      super(id)
      @type = type
      @errors = errors
      @boleto = boleto
      @created = StarkBank::Utils::Checks.check_datetime(created)
    end

    # # Retrieve a specific BoletoLog
    #
    # Receive a single BoletoLog object previously created by the Stark Bank API by passing its id
    #
    # ## Parameters (required):
    # - id [string]: object unique id. ex: "5656565656565656"
    #
    # ## Parameters (optional):
    # - user [Project object]: Project object. Not necessary if starkbank.user was set before function call
    #
    # ## Return:
    # - BoletoLog object with updated attributes
    def self.get(id:, user: nil)
      StarkBank::Utils::Rest.get_id(id: id, user: user, **resource)
    end

    # # Retrieve BoletoLogs
    #
    # Receive a generator of BoletoLog objects previously created in the Stark Bank API
    #
    # ## Parameters (optional):
    # - limit [integer, default None]: maximum number of objects to be retrieved. Unlimited if None. ex: 35
    # - boleto_ids [list of strings, default None]: list of Boleto ids to filter logs. ex: ["5656565656565656", "4545454545454545"]
    # - types [list of strings, default None]: filter for log event types. ex: "paid" or "registered"
    # - after [datetime.date, default None] date filter for objects created only after specified date. ex: datetime.date(2020, 3, 10)
    # - before [datetime.date, default None] date filter for objects only before specified date. ex: datetime.date(2020, 3, 10)
    # - user [Project object, default None]: Project object. Not necessary if starkbank.user was set before function call
    #
    # ## Return:
    # - list of BoletoLog objects with updated attributes
    def self.query(limit: nil, boleto_ids: nil, types: nil, after: nil, before: nil, user: nil)
      after = StarkBank::Utils::Checks.check_date(after)
      before = StarkBank::Utils::Checks.check_date(before)
      StarkBank::Utils::Rest.get_list(user: user, limit: limit, boleto_ids: boleto_ids, types: types, after: after, before: before, **resource)
    end

    def self.resource
      boleto_maker = StarkBank::Boleto.resource[:resource_maker]
      {
        resource_name: 'BoletoLog',
        resource_maker: proc { |json|
          BoletoLog.new(
            id: json['id'],
            created: json['created'],
            type: json['type'],
            errors: json['errors'],
            boleto: StarkBank::Utils::API.from_api_json(boleto_maker, json['boleto'])
          )
        }
      }
    end
  end
end
